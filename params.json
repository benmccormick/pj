{"name":"Pj","tagline":"pj - Projects for the command line inspired by Sublime Text","body":"# pj - Projects for the command line\r\n\r\npj is a tool for defining projects on the command line, inspired by Sublime Text's projects.  \r\n\r\n### Features\r\n\r\n- Define a set of files that make up a project\r\n- Use \"filters\" to narrow down file list: To source code for a feature, blog post text files that haven't been published yet, a specific filetype, or any other meaningful subset\r\n- Combine with other *nix programs for project search, editing, or to easily find a specific file\r\n\r\n### Installation\r\n\r\nFor now the easiest way to install pj is manually cloning this git repo to your machine.\r\n\r\n```\r\n# Go to /usr/local or whatever directory you use for installing scripts\r\ncd /usr/local\r\n# clone the repository from github\r\ngit clone https://github.com/benmccormick/pj\r\n# symlink pj to /usr/local/bin or somewhere else in your path\r\nln -s /usr/local/pj/pj /usr/local/bin/pj\r\n```\r\n\r\n### Usage\r\n\r\npj is simple to use.  In the simplest case, you can just run \r\n\r\n```\r\npj\r\n```\r\n\r\nto list out all of the files in a project.  That's not super useful on its own, but it becomes powerful when combined with other programs.\r\n\r\nYou can have project wide search by combining pj with a search program like [grep](http://www.gnu.org/software/grep/), [ack](http://beyondgrep.com/), or [ag](https://github.com/ggreer/the_silver_searcher).\r\n\r\n```\r\npj |ack foo # lists all occurences of foo within files in the project\r\n```\r\n\r\nYou can list out the project files and then pick the one(s) you want using a file picker like Facebook's [PathPicker](https://facebook.github.io/PathPicker/)\r\n\r\n```\r\npj | fpp # pick a file or several files to open in an editor or handle other tasks\r\n```\r\n\r\nYou can use a fuzzy finder like [fzf](https://github.com/junegunn/fzf) to select a file from the project list and open it up in an editor like Vim.\r\n\r\n```\r\nvim $(pj | fzf)\r\n```\r\n\r\nFor larger projects, you can also use filters to select a subset of the project.  For instance if you've created a filter named `analytics` that limits selection to files related to an analytics feature, you can pick from those files like this:\r\n\r\n```\r\npj -f analytics | fpp\r\n```\r\n\r\n### Configuration\r\n\r\nTo define a project with pj, you'll need a .pjconfig file.  You should place that project file at the root of your project's primary directory (below wherever you expect to execute pj from).  \r\n\r\n.pjconfig files contain 2 main items, a list of folders and a set of filters.  A typical .pjconfig might look something like this:\r\n\r\n```\r\n{\r\n    \"folders\": [{\r\n        \"path\": \"wcui/app/js\",\r\n        \"folder_exclude_patterns\": [\"vendor\"],\r\n        \"file_exclude_patterns\": []\r\n    }, {\r\n        \"path\": \"wcui/app/css\",\r\n        \"folder_exclude_patterns\": [\"vendor\"]\r\n    }, {\r\n       \"path\": \"wcui/views\",\r\n       \"file_exclude_patterns\": [\"*.pyc\"]\r\n    }, {\r\n        \"path\": \"wcui/tests/nightwatch\"\r\n    }, {\r\n        \"folder_exclude_patterns\": [\"wcui\", \"docs\"]\r\n    }],\r\n\r\n    \"filters\": {\r\n        \"js\": {\r\n            \"include_patterns\": [\"*.js\", \"*.es6\"]\r\n        },\r\n        \"nightwatch\": {\r\n            \"include_patterns\": [\"*nightwatch.json\", \"*/tests/nightwatch*\"]    \r\n        }\r\n    }\r\n}\r\n```\r\n\r\nEach item in the `folders` list corresponds to a set of files included in the project. Each folder includes a path (if no path is specified, the path is assumed to be the base directory), and may optionally include a list of `folder_exclude_patterns` and `file_exclude_patterns`.  \r\n\r\nFilters have a key value that you can use to reference them later, and then can contain an `include_patterns property` and an `exclude_patterns property`.  These take a pattern which is matched against the whole path for each file.\r\n","google":"UA-63778756-1","note":"Don't delete this file! It's used internally to help with page regeneration."}